stages:
    - test
    - pages
    - deploy

cpu-test:
    image: $CI_REGISTRY/ricos/truck/truck/cpu-test:latest
    stage: test
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    script:
        - cargo make ci-cpu-test
    except:
        - schedules

cpu-nightly-test:
    image: $CI_REGISTRY/ricos/truck/truck/cpu-test:latest
    stage: test
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    script:
        - cargo make ci-cpu-nightly-test
    except:
        - schedules

meshalgo-features-buildcheck:
    image: rust:latest
    stage: test
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    script:
        - cd truck-meshalgo
        - cargo check --no-default-features --features analyzers
        - cargo check --no-default-features --features filters
        - cargo check --no-default-features --features tessellation
    except:
        - schedules

gpu-test:
    image: $CI_REGISTRY/ricos/truck/truck/gpu-test:latest
    stage: test
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    script:
        - cargo make ci-gpu-test
    tags:
        - gpu
    artifacts:
        paths:
            - images
    except:
        - schedules

wasm-test:
    image: $CI_REGISTRY/ricos/truck/truck/wasm-test:latest
    stage: test
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    script:
        - deno lint
        - cargo make wasm-test
    except:
        - schedules

page-build:
    image: $CI_REGISTRY/ricos/truck/truck/wasm-test:latest
    stage: test
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    script:
        - mkdir public
        - cargo make page-build
        - mv truck-js/pkg public/adhoc-viewer
        - mv dist public/webgpu-examples
    artifacts:
        paths:
            - public
    except:
        - schedules

lint-check:
    image: rust:latest
    stage: test
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    script:
        - rustup component add clippy
        - cargo clippy
        - rustup default nightly
        - rustup component add rustfmt
        - cargo fmt -- --check
    except:
        - schedules

change-log:
    image: ubuntu:latest
    stage: test
    variables:
        GIT_STRATEGY: clone
    before_script:
        - sed -i.bak -e "s%http://archive.ubuntu.com/ubuntu/%http://ftp.jaist.ac.jp/pub/Linux/ubuntu/%g" /etc/apt/sources.list
        - sed -i.bak -e "s%http://security.ubuntu.com/ubuntu/%http://ftp.jaist.ac.jp/pub/Linux/ubuntu/%g" /etc/apt/sources.list
        - apt-get update && apt-get install git -y
        - git fetch
    script:
        - bash -c "! git diff --exit-code origin/master CHANGELOG.md"
    except:
        - master
        - tags
        - schedules

readme-generator:
    image: $CI_REGISTRY/ricos/truck/truck/cpu-test:latest
    stage: test
    script:
        - cargo run --bin readme-generator
        - git diff --exit-code
    except:
        - tags
        - schedules

pages:
    image: rust:latest
    stage: pages
    script:
        - cargo doc --no-deps
        - mv target/doc public/doc
    artifacts:
        paths:
            - public
    only:
        - master
    except:
        - schedules

update-cpu-test-container:
    image: docker:latest
    stage: deploy
    services:
        - docker
    variables:
        MY_REGISTRY: $CI_REGISTRY/ricos/truck/truck
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $MY_REGISTRY
        - docker build -t $MY_REGISTRY/cpu-test:latest -f docker/cpu-test.Dockerfile .
        - docker push $MY_REGISTRY/cpu-test:latest
    only:
        - schedules

update-gpu-test-container:
    image: docker:latest
    stage: deploy
    services:
        - docker
    variables:
        MY_REGISTRY: $CI_REGISTRY/ricos/truck/truck
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $MY_REGISTRY
        - docker build -t $MY_REGISTRY/gpu-test:latest -f docker/gpu-test.Dockerfile .
        - docker push $MY_REGISTRY/gpu-test:latest
    only:
        - schedules

update-wasm-test-container:
    image: docker:latest
    stage: deploy
    services:
        - docker
    variables:
        MY_REGISTRY: $CI_REGISTRY/ricos/truck/truck
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $MY_REGISTRY
        - docker build -t $MY_REGISTRY/wasm-test:latest -f docker/wasm-test.Dockerfile .
        - docker push $MY_REGISTRY/wasm-test:latest
    only:
        - schedules
